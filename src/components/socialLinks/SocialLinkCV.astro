
---

let link = Astro.props.link;
let iconName = Astro.props.iconName;
let offset = Astro.props.offset;
//let backgroundColor = Astro.props.backgroundColor !== undefined ? `#${Astro.props.backgroundColor}` : "#1a1b26";
let hoverColor = `#${Astro.props.hoverColor}`;
let left = Astro.props.left;
let right = Astro.props.right;
let bottom = Astro.props.bottom;
let middle = Astro.props.middle;

let path = Astro.props.path;
let svgWidth = Astro.props.svgWidth;
let svgHeight = Astro.props.svgHeight;
let viewbox = Astro.props.viewbox;

let iconLink = `/svg/${iconName}.svg`; 

---
					
<a href={link} class="socialLink fadeInSocialLinks fadeInRightSocialLink" style=`--offset:${offset};`>
	<svg class="circle" xmlns="http://www.w3.org/2000/svg" width={svgWidth} height={svgHeight} viewBox={viewbox}>
		<path d={path}/>
	</svg>

</a>

<style>
	svg{
		fill: var(--color-surface-400);
	}
    svg:hover{
        fill: var(--color-primary-600);
    }
  	.socialLink:nth-child(3) {
		bottom: -18%;
        left:50%;
        transform: translateX(-50%);
    	}

	.socialLink:nth-child(2) {
		bottom: -3%;
		left: 0;
	}
	.socialLink:nth-child(4) {
		bottom:-3%;
		right: 0;
	}
    .circle {
		width: 55px;
		height: 55px;
		border-radius: 50%;
		background-color: var(--color-surface-200);
		border: 2px solid var(--color-surface-400);
	}
	.circle:hover{
		transition: 0.3s;
		transform: scale(1.1);
		box-shadow : 0 0 15px var(--hoverColor);
	}
	.socialLink{
		z-index:10;
		position:absolute;
		max-width:55px;
		max-height:55px;
	}
	.socialLink img{
		box-sizing: border-box;
		border:none;
	}
	.fadeInSocialLinks{
		opacity:0;
		animation: fadeInBlur 1s ease;
		animation-fill-mode: forwards;
        animation-delay: calc(0.5s + 0.1s * var(--offset));
	}
	@keyframes fadeInBlur{
		from{
			opacity: 0;
			filter:blur(2px);
		}
		to{
			opacity: 1;
			filter:blur(0px);
		}
	}
</style>